name: Build and Deploy OpenAI App

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: my-sample-app
  EKS_CLUSTER_NAME: demo-eks-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        sed -i 's|${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}|'"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"'|' k8s/deployments/openai-app-deployment.yaml
        kubectl apply -f k8s/deployments/openai-app-deployment.yaml
        kubectl apply -f k8s/services/openai-app-service.yaml

    - name: Update OpenAI API Key
      run: |
        kubectl create secret generic openai-secret --from-literal=api-key=${{ secrets.OPENAI_API_KEY }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Wait for deployment
      run: |
        kubectl rollout status deployment/openai-app --timeout=300s

    - name: Get Service URL
      run: |
        echo "Service URL:"
        kubectl get service openai-app-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'

    - name: Debug info
      if: failure()
      run: |
        kubectl get pods
        kubectl describe deployment openai-app
        kubectl logs -l app=openai-app --all-containers --tail=100
        kubectl get events --sort-by=.metadata.creationTimestamp
